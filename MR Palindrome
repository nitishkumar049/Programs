
import java.io.IOException;
import java.util.StringTokenizer;

import org.apache.hadoop.io.IntWritable;
import org.apache.hadoop.io.LongWritable;
import org.apache.hadoop.io.Text;
import org.apache.hadoop.mapred.MapReduceBase;
import org.apache.hadoop.mapred.Mapper;
import org.apache.hadoop.mapred.OutputCollector;
import org.apache.hadoop.mapred.Reporter;


public class palinmap extends MapReduceBase implements Mapper<LongWritable,Text,
Text,IntWritable> {
	private final static IntWritable one = new IntWritable(1);
	private Text word = new Text();

	public void map(LongWritable key, Text value,OutputCollector<Text,IntWritable> output, Reporter reporter) throws IOException {
		String line = value.toString();
		StringTokenizer  tokenizer = new StringTokenizer(line);
		while (tokenizer.hasMoreTokens())
		{
			String token = tokenizer.nextToken();
			StringBuilder s=new StringBuilder(token); 
			String p=s.toString();
			StringBuilder s3=s.reverse();
			String q=s3.toString();
			if(p.equalsIgnoreCase(q))
			{
			word.set(token);
			output.collect(word, one);
		    }
	    }
    }
}
